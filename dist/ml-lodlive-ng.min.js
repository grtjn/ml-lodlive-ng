angular.module("ml.lodlive",["ml.common"]),function(){"use strict";angular.module("ml.lodlive").directive("mlLodlive",[function(){return{restrict:"E",controller:"MLLodliveCtrl",replace:!0,scope:{lodliveId:"@"},template:'<div id="mllodlive" class="ml-lodlive"><ml-lodlive-legend></ml-lodlive-legend></div>'}}]).controller("MLLodliveCtrl",["$scope","MLRest",function(e,t){var i={lodlive:{}};e.lodliveId&&(i.lodlive.id=e.lodliveId,jQuery("#mllodlive").lodlive({profile:MarkLogicProfile,firstUri:i.lodlive.id})),e.$watch("lodliveId",function(e,t){var o=jQuery("#mllodlive").lodlive();i.lodlive.id=e,o&&(o.context.empty(),o.init(i.lodlive.id))},!0),angular.extend(e,{model:i})}])}(),function(){"use strict";angular.module("ml.lodlive").directive("mlLodliveLegend",[function(){return{restrict:"E",controller:"MLLodliveLegendCtrl",replace:!0,scope:{},templateUrl:"/ml-lodlive-ng/ml-lodlive-legend-dir.html"}}]).controller("MLLodliveLegendCtrl",["$scope",function(e){function t(){if(i.profile.UI&&i.profile.UI.relationships){var e=i.profile.UI.relationships;for(var t in e)if(e.hasOwnProperty(t)){var o=t;t.indexOf("#")>-1?o=t.substring(t.lastIndexOf("#")+1):t.indexOf("/")>-1&&(o=t.substring(t.lastIndexOf("/")+1)),i.relationships.push({icon:"fa fa-circle",title:o,style:"color: "+e[t].color})}}i.relationships.push({icon:"fa fa-circle",title:"other",style:"color: #369;"})}var i={profile:MarkLogicProfile,showLegend:!1,items:[{icon:"fa fa-list",title:"Document Information"},{icon:"fa fa-cog",title:"Tools"},{icon:"fa fa-arrows-alt",title:"Expand All"},{icon:"fa fa-info-circle",title:"More Information"},{icon:"fa fa-dot-circle-o",title:"Make Root Node"},{icon:"fa fa-external-link",title:"Open In Another Page"},{icon:"fa fa-trash-o",title:"Remove the Node"},{icon:"fa fa-certificate",title:"Group of Related Items"},{icon:"fa fa-circle",title:"Related Item"}],relationships:[]};t(),angular.extend(e,{model:i})}])}();var MarkLogicProfile={};MarkLogicProfile.connection={"http:":{description:{it:"DBpedia is a community effort to extract structured information from Wikipedia and to make this information available on the Web. DBpedia allows you to ask sophisticated queries against Wikipedia, and to link other data sets on the Web to Wikipedia data.",en:"DBpedia is a community effort to extract structured information from Wikipedia and to make this information available on the Web. DBpedia allows you to ask sophisticated queries against Wikipedia, and to link other data sets on the Web to Wikipedia data."},sparql:{allClasses:"SELECT DISTINCT ?object  WHERE {[] a ?object} ORDER BY ?object  LIMIT 50  ",findSubject:"SELECT DISTINCT ?subject WHERE { {?subject a <{CLASS}>;<http://purl.org/dc/elements/1.1/title> ?object. FILTER(regex(str(?object),'{VALUE}','i'))} UNION {?subject a <{CLASS}>;<http://www.w3.org/2000/01/rdf-schema#label> ?object. FILTER(regex(str(?object),'{VALUE}','i'))} UNION {?subject a <{CLASS}>;<http://www.w3.org/2004/02/skos/core#prefLabel> ?object. FILTER(regex(str(?object),'{VALUE}','i'))} } LIMIT 1",documentUri:"SELECT DISTINCT * WHERE {<{URI}> ?property ?object.FILTER ((( isIRI(?object) && ?property != <http://xmlns.com/foaf/0.1/depiction> )|| ?property = <http://www.w3.org/2000/01/rdf-schema#label>  || ?property = <http://www.georss.org/georss/point> || ?property = <http://xmlns.com/foaf/0.1/surname> || ?property = <http://xmlns.com/foaf/0.1/name> || ?property = <http://purl.org/dc/elements/1.1/title>))}  ORDER BY ?property",document:'SELECT DISTINCT *  WHERE  {{<{URI}> ?property ?object. FILTER(!isLiteral(?object))} UNION    {<{URI}> ?property    ?object.FILTER(isLiteral(?object)).FILTER(lang(?object) ="it")} UNION   {<{URI}> ?property    ?object.FILTER(isLiteral(?object)).FILTER(lang(?object) ="en")}}  ORDER BY ?property',bnode:"SELECT DISTINCT *  WHERE {<{URI}> ?property ?object}",inverse:"SELECT DISTINCT * WHERE {?object ?property <{URI}> FILTER(REGEX(STR(?object),'//dbpedia.org'))} LIMIT 100",inverseSameAs:"SELECT DISTINCT * WHERE {?object <http://www.w3.org/2002/07/owl#sameAs> <{URI}> FILTER(REGEX(STR(?object),'//dbpedia.org'))}"},useForInverseSameAs:!0,endpoint:"http://dbpedia.org/sparql"}},MarkLogicProfile.arrows={"http://www.w3.org/2002/07/owl#sameAs":"isSameAs","http://purl.org/dc/terms/isPartOf":"isPartOf","http://purl.org/dc/elements/1.1/type":"isType","http://www.w3.org/1999/02/22-rdf-syntax-ns#type":"isType"},MarkLogicProfile["default"]={sparql:{allClasses:"SELECT DISTINCT ?object WHERE {[] a ?object}",findSubject:"SELECT DISTINCT ?subject WHERE { {?subject a <{CLASS}>;<http://purl.org/dc/elements/1.1/title> ?object. FILTER(regex(str(?object),'{VALUE}','i'))} UNION {?subject a <{CLASS}>;<http://www.w3.org/2000/01/rdf-schema#label> ?object. FILTER(regex(str(?object),'{VALUE}','i'))} UNION {?subject a <{CLASS}>;<http://www.w3.org/2004/02/skos/core#prefLabel> ?object. FILTER(regex(str(?object),'{VALUE}','i'))} }  LIMIT 1  ",documentUri:"SELECT DISTINCT * WHERE {<{URI}> ?property ?object} ORDER BY ?property",document:"SELECT DISTINCT * WHERE {<{URI}> ?property ?object}",bnode:"SELECT DISTINCT *  WHERE {<{URI}> ?property ?object}",inverse:"SELECT DISTINCT * WHERE {?object ?property <{URI}>.} LIMIT 100",inverseSameAs:"SELECT DISTINCT * WHERE {{?object <http://www.w3.org/2002/07/owl#sameAs> <{URI}> } UNION { ?object <http://www.w3.org/2004/02/skos/core#exactMatch> <{URI}>}}"},endpoint:"http://labs.regesta.com/resourceProxy/",document:{className:"standard",titleProperties:["http://www.w3.org/2000/01/rdf-schema#label"]}},MarkLogicProfile.UI={ignoreBnodes:!0,nodeIcons:[{builtin:"tools"},{builtin:"docInfo"},{icon:"fa fa-thumb-tack",title:"Pin in SPARQL",handler:function(e,t){function i(e,i){var o=e.val(),n=l.find(".rsuite-pinner-results").empty().addClass("loading"),r="SELECT ?subject ?title WHERE { ?subject <http://purl.org/dc/elements/1.1/type> <"+i+'>; <http://purl.org/dc/elements/1.1/title> ?title FILTER(contains(?title,"'+o+'")) }';$.ajax({url:t.options.connection["http:"].endpoint+"?"+t.options.endpoints.all+"&query="+encodeURIComponent(r),contentType:"json",dataType:t.getAjaxDataType(),success:function(e){for(var o=(e.results.bindings,0);20>o;o++)$('<div class="rsuite-pinner-result-item" data-pinned-type="'+i+'" data-pinned-value="'+o+'"> item '+o+"</div>").addClass(t.rsuitePinned.indexOf(o)>-1?"rsuite-is-pinned":"").appendTo(n);return;var o},error:function(){console.log("error",arguments)}})}var o,n,r=this,l=t.container.find(".rsuite-pinner"),s=e.attr("rel");if(l.length)l.find(".rsuite-pinner-results").empty();else{l=$('<div class="rsuite-pinner"></div>').hide().appendTo(t.container);var a=$('<div class="rsuite-pinner-panel"></div>').appendTo(l);a.append('<div class="rsuite-pinner-search"><input type="text" class="rsuite-pinner-text"></div>'),a.append('<div class="rsuite-pinner-pinned"></div>'),a.append('<div class="rsuite-pinner-results"><div class="noresults">type to search</div></div>'),a.append('<div class="rsuite-pinner-footer"><button class="rsuite-pinner-btn">done</button></div>'),a.find(".rsuite-pinner-text").on("keyup",function(e){if(e.which&&(e.which>=46||8===e.which)){var t=$(this);clearTimeout(n),n=setTimeout(function(){i(t,l.attr("pinner-uri"))},250)}}),l.on("click",function(e){var t=$(e.target);return console.log("target",t),t.is(".rsuite-pinner-btn")?l.fadeOut("fast"):(e.preventDefault(),e.stopPropagation()),!1}),a.on("click",".rsuite-pinner-result-item",function(){var e=$(this),i=e.data("pinned-value"),o=t.rsuitePinned.indexOf(i),n=e.data("pinned-type");console.log("uri %s, pinned index %d",i,o),e.toggleClass("rsuite-is-pinned"),o>-1?(t.rsuitePinned.splice(o,1),t.rsuitePinTypes[n]--,e.parent(".rsuite-pinner-pinned").length&&(e.slideUp("fast",function(){e.remove()}),l.find('.rsuite-pinner-results .rsuite-pinner-result-item[data-pinned-value="'+i+'"]').removeClass("rsuite-is-pinned"))):(t.rsuitePinned.push(i),t.rsuitePinTypes.hasOwnProperty(n)||(t.rsuitePinTypes[n]=0),t.rsuitePinTypes[n]++,l.find(".rsuite-pinner-pinned").append(e.clone())),console.log("pintype %s, count %d",n,t.rsuitePinTypes[n]),t.rsuitePinTypes[n]?t.context.find('.lodlive-node[rel="'+n+'"]').addClass("pinned"):t.context.find('.lodlive-node[rel="'+n+'"]').removeClass("pinned")}),t.context.parent().on("scroll",function(){console.log("on scroll"),l.fadeOut("fast")}),t.rsuitePinned||(t.rsuitePinned=[],t.rsuitePinTypes={})}l.attr("pinner-uri")!==s?(l.attr("pinner-uri",s),l.fadeIn("fast"),l.find(".rsuite-pinner-pinned .rsuite-pinner-result-item").show().not('[data-pinned-type="'+s+'"]').hide()):(clearTimeout(n),l.fadeToggle("fast")),o=r.offset(),l.css({left:o.left+20,top:o.top-8}),l.find(".rsuite-pinner-text").val("").focus()}}],tools:[{builtin:"close"},{builtin:"rootNode"},{builtin:"expand"}],nodeHover:function(){},relationships:{"http://www.w3.org/1999/02/22-rdf-syntax-ns#type":{color:"#000"},"http://www.w3.org/2004/02/skos/core#broader":{color:"#69C"},"http://www.w3.org/2004/02/skos/core#related":{color:"#FFF444"}}},MarkLogicProfile.endpoints={all:"output=json&format=json&timeout=0",jsonp:!0},function(e){try{e=angular.module("ml.lodlive.tpls")}catch(t){e=angular.module("ml.lodlive.tpls",[])}e.run(["$templateCache",function(e){e.put("/ml-lodlive-ng/ml-lodlive-legend-dir.html",'<div id="ml-lodlive-legend" class="ml-lodlive-legend"><div class="ml-lodlive-legend-toggle"><button class="btn btn-xs ml-lodlive-legend-button" ng-click="model.showLegend = !model.showLegend"><i class="fa fa-life-ring"></i></button></div><div class="ml-lodlive-legend-display" ng-if="model.showLegend"><h4><b>Legend</b></h4><div ng-repeat="item in model.items"><span class="{{item.icon}}"></span> {{item.title}}</div><h5><b>Relationships</b></h5><div ng-repeat="rel in model.relationships"><span class="{{rel.icon}}" style="{{rel.style}}"></span> {{rel.title}}</div></div></div>')}])}();